So how do we load a non-default version of a software package? In this case, the
only change we need to make is be more specific about the module we are loading
by leaving in the version number after the `/`.

```
{{ site.remote.prompt }} module load gcc/13.3
{{ site.remote.prompt }} gcc --version
```
{: .bash}

```
The following have been reloaded with a version change:
  1) flexiblas/3.3.1 => flexiblas/3.4.4     4) hwloc/2.9.1 => hwloc/2.10.0              7) pmix/4.2.4 => pmix/5.0.2
  2) gcc/12.3 => gcc/13.3                   5) libfabric/1.18.0 => libfabric/1.21.0     8) ucc/1.2.0 => ucc/1.3.0
  3) gcccore/.12.3 => gcccore/.13.3         6) openmpi/4.1.5 => openmpi/5.0.3           9) ucx/1.14.1 => ucx/1.16.0
```
{: .output}

We now have successfully switched from GCC 12.3 to GCC 13.3. Because OpenMPI
is not available for that specific version of GCC, its module was inactivated.
